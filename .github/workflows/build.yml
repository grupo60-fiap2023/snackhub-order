name: Deployment 🚧
on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:
jobs:
  build:
    name: Build 💡
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17 🔧
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available
      - name: Cache SonarCloud packages 📦
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages 📦
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Change wrapper permissions 🛡️
        run: chmod +x gradlew
      - name: Build and analyze 🔍
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info

  code-analisys:
    name: Code Analisys 👀
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17 🔧
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Grant execute permission for gradlew 🛡️
        run: chmod +x gradlew

      - name: Generate Coverage Reports and Upload Artifacts
        run: |
          ./gradlew :domain:jacocoTestReport
          ./gradlew :application:jacocoTestReport
          ./gradlew :infrastructure:jacocoTestReport
          
          # Upload dos relatórios
          for subprojeto in domain application infrastructure; do
            path="$GITHUB_WORKSPACE/$subprojeto/build/reports/jacoco/test/jacocoTestReport.xml"
            echo "Uploading coverage report for $subprojeto"
            echo "Report path: $path"
            echo "::set-output name=report-path::$path"
            echo "::set-output name=report-name::$subprojeto-coverage.xml"
          done
        shell: bash

      - name: Upload Combined Report 📓
        uses: actions/upload-artifact@v2
        with:
          name: combined-report
          path: ${{ github.workspace }}/combined-report